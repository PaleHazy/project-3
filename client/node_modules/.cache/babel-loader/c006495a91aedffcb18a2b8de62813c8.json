{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\john\\\\Desktop\\\\project31\\\\project-3\\\\client\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { connect } from \"react-redux\";\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const updateCollections = this.props.updateCollections;\n    const collectionRef = firestore.collection(\"collections\");\n    collectionRef.get().then(snapshot => {\n      console.log(snapshot);\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      console.log(collectionsMap);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    }); // fetch('https://firestore.googleapis.com/v1/projects/project-3-6eebe/databases/(default)/documents/collections')\n    // .then(response => response.json())\n    // .then(collections => console.log(collections))\n  }\n\n  render() {\n    const proppies = this.props;\n    const loading = this.state.loading;\n    console.log(\"LOADING\", loading);\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${proppies.match.path}`,\n      render: props => {\n        console.log('maaaaammaa miaaa', props);\n        return React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n          isLoading: loading\n        }, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${proppies.match.path}/:collectionId`,\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/Users/john/Desktop/project31/project-3/client/src/pages/shop/shop.component.jsx"],"names":["React","Route","CollectionsOverview","CollectionPage","firestore","convertCollectionsSnapshotToMap","connect","updateCollections","WithSpinner","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","get","then","snapshot","console","log","collectionsMap","setState","render","proppies","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAIA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,MAAMC,8BAA8B,GAAGD,WAAW,CAACN,mBAAD,CAAlD;AACA,MAAMQ,yBAAyB,GAAGF,WAAW,CAACL,cAAD,CAA7C;;AAEA,MAAMQ,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AACNC,MAAAA,OAAO,EAAE;AADH,KAD6B;AAAA,SAKrCC,uBALqC,GAKX,IALW;AAAA;;AAOrCC,EAAAA,iBAAiB,GAAG;AAAA,UACVT,iBADU,GACY,KAAKU,KADjB,CACVV,iBADU;AAElB,UAAMW,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACnCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,YAAMG,cAAc,GAAGpB,+BAA+B,CAACiB,QAAD,CAAtD;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYC,cAAZ;AACAlB,MAAAA,iBAAiB,CAACkB,cAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAAEZ,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KAND,EAJkB,CAYlB;AACA;AACA;AAED;;AAEDa,EAAAA,MAAM,GAAG;AACP,UAAMC,QAAQ,GAAG,KAAKX,KAAtB;AADO,UAECH,OAFD,GAEa,KAAKD,KAFlB,CAECC,OAFD;AAGPS,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBV,OAAvB;AACA,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAG,GAAEc,QAAQ,CAACC,KAAT,CAAeC,IAAK,EAF/B;AAGE,MAAA,MAAM,EAAGb,KAAD,IAAW;AACjBM,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCP,KAAhC;AAEA,eACE,oBAAC,8BAAD;AAAgC,UAAA,SAAS,EAAEH;AAA3C,WAAwDG,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAGD,OATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAYE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAG,GAAEW,QAAQ,CAACC,KAAT,CAAeC,IAAK,gBAD/B;AAEE,MAAA,MAAM,EAAGb,KAAD,IACN,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEH;AAAtC,SAAmDG,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,CADF;AAqBD;;AAlDoC;;AAqDvC,MAAMc,kBAAkB,GAAGC,QAAQ,KAAK;AACtCzB,EAAAA,iBAAiB,EAAEkB,cAAc,IAC/BO,QAAQ,CAACzB,iBAAiB,CAACkB,cAAD,CAAlB;AAF4B,CAAL,CAAnC;;AAIA,eAAenB,OAAO,CAAC,IAAD,EAAOyB,kBAAP,CAAP,CAAkCpB,QAAlC,CAAf","sourcesContent":["import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\";\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap\n} from \"../../firebase/firebase.utils\";\nimport { connect } from \"react-redux\";\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\n\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  state = {\n    loading: true\n  };\n\n  unsubscribeFromSnapshot = null;\n\n  componentDidMount() {\n    const { updateCollections } = this.props;\n    const collectionRef = firestore.collection(\"collections\");\n\n    collectionRef.get().then(snapshot => {\n      console.log(snapshot);\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      console.log(collectionsMap);\n      updateCollections(collectionsMap);\n      this.setState({ loading: false });\n    });\n\n    // fetch('https://firestore.googleapis.com/v1/projects/project-3-6eebe/databases/(default)/documents/collections')\n    // .then(response => response.json())\n    // .then(collections => console.log(collections))\n\n  }\n\n  render() {\n    const proppies = this.props;\n    const { loading } = this.state;\n    console.log(\"LOADING\", loading);\n    return (\n      <div className='shop-page'>\n        <Route\n          exact\n          path={`${proppies.match.path}`}\n          render={(props) => {\n            console.log('maaaaammaa miaaa', props);\n\n            return (\n              <CollectionsOverviewWithSpinner isLoading={loading} {...props} />\n            );\n          }}\n        />\n        <Route\n          path={`${proppies.match.path}/:collectionId`}\n          render={(props) => (\n            <CollectionPageWithSpinner isLoading={loading} {...props} />\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap =>\n    dispatch(updateCollections(collectionsMap))\n});\nexport default connect(null, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}