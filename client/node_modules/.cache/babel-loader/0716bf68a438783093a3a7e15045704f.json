{"ast":null,"code":"import _defineProperty from \"/Users/palehazy/Documents/Projects/project-3/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport CartActionTypes from './cart.types';\nimport { addItemToCart } from './cart.utils';\nimport { removeItemFromCart } from './cart.utils';\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: []\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CartActionTypes.TOGGLE_CART:\n      return _objectSpread({}, state, {\n        hidden: !state.hidden\n      });\n\n    case CartActionTypes.ADD_ITEM:\n      return _objectSpread({}, state, {\n        cartItems: addItemToCart(state.cartItems, action.payload)\n      });\n\n    case CartActionTypes.CLEAR_ITEM_FROM_CART:\n      return _objectSpread({}, state, {\n        cartItems: state.cartItems.filter(cartItem => cartItem.id !== action.payload.id)\n      });\n\n    case CartActionTypes.REMOVE_ITEM:\n      console.log('removing Itemzzz', state);\n      return _objectSpread({}, state, {\n        cartItems: removeItemFromCart(state.cartItems, action.payload)\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/Users/palehazy/Documents/Projects/project-3/src/redux/cart/cart.reducer.js"],"names":["CartActionTypes","addItemToCart","removeItemFromCart","INITIAL_STATE","hidden","cartItems","cartReducer","state","action","type","TOGGLE_CART","ADD_ITEM","payload","CLEAR_ITEM_FROM_CART","filter","cartItem","id","REMOVE_ITEM","console","log"],"mappings":";;;;;;AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAAQC,aAAR,QAA6B,cAA7B;AACA,SAAQC,kBAAR,QAAkC,cAAlC;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,MAAM,EAAE,IADY;AAEpBC,EAAAA,SAAS,EAAE;AAFS,CAAtB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,aAAT,EAAwBK,MAAxB,KAAmC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,eAAe,CAACU,WAArB;AACE,+BACOH,KADP;AAEIH,QAAAA,MAAM,EAAE,CAACG,KAAK,CAACH;AAFnB;;AAKA,SAAKJ,eAAe,CAACW,QAArB;AACE,+BACKJ,KADL;AAEEF,QAAAA,SAAS,EAAEJ,aAAa,CAACM,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACI,OAAzB;AAF1B;;AAIA,SAAKZ,eAAe,CAACa,oBAArB;AACE,+BACKN,KADL;AAEEF,QAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBS,MAAhB,CAAuBC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBR,MAAM,CAACI,OAAP,CAAeI,EAAlE;AAFb;;AAIA,SAAKhB,eAAe,CAACiB,WAArB;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCZ,KAAhC;AACA,+BACKA,KADL;AAEEF,QAAAA,SAAS,EAAEH,kBAAkB,CAACK,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACI,OAAzB;AAF/B;;AAIN;AACA,aAAOL,KAAP;AAxBJ;AA0BD,CA3BD;;AA4BA,eAAeD,WAAf","sourcesContent":["import CartActionTypes from './cart.types'\nimport {addItemToCart} from  './cart.utils'\nimport {removeItemFromCart} from  './cart.utils'\n\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: []\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CartActionTypes.TOGGLE_CART:\n      return {\n          ...state,\n          hidden: !state.hidden,\n         \n      };\n      case CartActionTypes.ADD_ITEM:\n        return{\n          ...state,\n          cartItems: addItemToCart(state.cartItems, action.payload)\n        }\n        case CartActionTypes.CLEAR_ITEM_FROM_CART:\n          return {\n            ...state,\n            cartItems: state.cartItems.filter(cartItem => cartItem.id !== action.payload.id)\n          }\n          case CartActionTypes.REMOVE_ITEM:\n            console.log('removing Itemzzz', state)\n            return {\n              ...state,\n              cartItems: removeItemFromCart(state.cartItems, action.payload)\n            }\n      default: \n      return state;\n  }\n};\nexport default cartReducer;\n"]},"metadata":{},"sourceType":"module"}