{"ast":null,"code":"import _defineProperty from \"/Users/palehazy/Documents/Projects/project-3/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport const addItemToCart = (cartItems, cartItemToAdd) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToAdd.id);\n  console.log('existt', existingCartItem);\n\n  if (existingCartItem) {\n    console.log('insidee bissssshhh');\n    return cartItems.map(cartItem => {\n      console.log('cartItem.id', cartItem.id);\n      console.log('toadd', cartItemToAdd);\n      return cartItem.id === cartItemToAdd.id ? _objectSpread({}, cartItem, {\n        quantity: cartItem.quantity + 1\n      }) : cartItem;\n    });\n  }\n\n  return [...cartItems, _objectSpread({}, cartItemToAdd, {\n    quantity: 1\n  })];\n};\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\n  console.log('cartItems', cartItems);\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToRemove.id);\n\n  if (existingCartItem.quantity === 1) {\n    return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id);\n  }\n\n  return cartItems.map(cartItem => cartItem.id === cartItemToRemove.id ? _objectSpread({}, cartItems, {\n    quantity: cartItem.quantity - 1\n  }) : cartItem);\n};","map":{"version":3,"sources":["/Users/palehazy/Documents/Projects/project-3/src/redux/cart/cart.utils.js"],"names":["addItemToCart","cartItems","cartItemToAdd","existingCartItem","find","cartItem","id","console","log","map","quantity","removeItemFromCart","cartItemToRemove","filter"],"mappings":";;;;;;AAAA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,aAAZ,KAA8B;AACzD,QAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CACvBC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EADnB,CAAzB;AAGEC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBL,gBAArB;;AACF,MAAIA,gBAAJ,EAAsB;AAClBI,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACF,WAAOP,SAAS,CAACQ,GAAV,CAAcJ,QAAQ,IAC5B;AACIE,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BH,QAAQ,CAACC,EAApC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBN,aAArB;AAED,aAAQG,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EAA9B,qBACDD,QADC;AACSK,QAAAA,QAAQ,EAAEL,QAAQ,CAACK,QAAT,GAAoB;AADvC,WAENL,QAFF;AAEY,KAPT,CAAP;AASD;;AAED,SAAO,CAAC,GAAGJ,SAAJ,oBAAoBC,aAApB;AAAmCQ,IAAAA,QAAQ,EAAE;AAA7C,KAAP;AACD,CAnBM;AAqBP,OAAO,MAAMC,kBAAkB,GAAG,CAACV,SAAD,EAAYW,gBAAZ,KAAiC;AACjEL,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBP,SAAzB;AACF,QAAME,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CACvBC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBM,gBAAgB,CAACN,EADtB,CAAzB;;AAGA,MAAGH,gBAAgB,CAACO,QAAjB,KAA8B,CAAjC,EAAmC;AACjC,WAAOT,SAAS,CAACY,MAAV,CAAiBR,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBM,gBAAgB,CAACN,EAA9D,CAAP;AACD;;AACD,SAAOL,SAAS,CAACQ,GAAV,CACLJ,QAAQ,IACRA,QAAQ,CAACC,EAAT,KAAgBM,gBAAgB,CAACN,EAAjC,qBACIL,SADJ;AACeS,IAAAA,QAAQ,EAAEL,QAAQ,CAACK,QAAT,GAAoB;AAD7C,OAEEL,QAJG,CAAP;AAMC,CAdM","sourcesContent":["export const addItemToCart = (cartItems, cartItemToAdd) => {\n  const existingCartItem = cartItems.find(\n    cartItem => cartItem.id === cartItemToAdd.id\n  );\n    console.log('existt',existingCartItem)\n  if (existingCartItem) {\n      console.log('insidee bissssshhh')\n    return cartItems.map(cartItem =>\n     {\n         console.log('cartItem.id', cartItem.id)\n         console.log('toadd', cartItemToAdd)\n\n        return (cartItem.id === cartItemToAdd.id\n        ? { ...cartItem, quantity: cartItem.quantity + 1 }\n        : cartItem)}\n    );\n  }\n\n  return [...cartItems, { ...cartItemToAdd, quantity: 1 }];\n};\n\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\n  console.log('cartItems', cartItems)\nconst existingCartItem = cartItems.find(\n  cartItem => cartItem.id === cartItemToRemove.id\n)\nif(existingCartItem.quantity === 1){\n  return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id)\n}\nreturn cartItems.map(\n  cartItem => \n  cartItem.id === cartItemToRemove.id ? \n  {...cartItems, quantity: cartItem.quantity - 1}\n  : cartItem\n)\n}"]},"metadata":{},"sourceType":"module"}